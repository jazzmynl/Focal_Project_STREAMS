---
title: "Fire"
format: html
editor: visual
---

# Fire Visualization

## Load packages and files

```{r}
#load packages
library(tidyverse)
library(readr)
library(ggplot2)
library(dplyr)
library(viridis)    
#install.packages("bestNormalize")
library(bestNormalize)
#install.packages("ggcorrplot")
library(ggcorrplot)
library(FactoMineR)
install.packages("vqv/ggbiplot")
library(ggbiplot)
library(ggthemes)
library(vegan)
```

```{r}
#load files
ConfirmedSite <- read_csv("~/Desktop/GitHub/Focal_Project_STREAMS/ConfirmedSite.csv")
```

## Prelim visualization

```{r}
##Boxplots of all cram scores
#plot all index to identify patterns
ConfirmedSite %>%
  ggplot(aes(x=`Pre/Post_Fire`, y=indexscore)) +
  geom_boxplot()+
  geom_point(aes(color=`Fire/Control`))

#plot all buffer to identify patterns
ConfirmedSite %>%
  ggplot(aes(x=`Pre/Post_Fire`, y=bufferlan)) +
  geom_boxplot()+
  geom_point(aes(color=`Fire/Control`))

#plot all hydrology to identify patterns
ConfirmedSite %>%
  ggplot(aes(x=`Pre/Post_Fire`, y=hydrology)) +
  geom_boxplot()+
  geom_point(aes(color=`Fire/Control`))

#plot all physical to identify patterns
ConfirmedSite %>%
  ggplot(aes(x=`Pre/Post_Fire`, y=physical)) +
  geom_boxplot()+
  geom_point(aes(color=`Fire/Control`))

#plot all biotic to identify patterns
ConfirmedSite %>%
  ggplot(aes(x=`Pre/Post_Fire`, y=biotic_str)) +
  geom_boxplot()+
  geom_point(aes(color=`Fire/Control`))


```

```{r}
#Index grid
ggplot(data = ConfirmedSite, aes(x=fct_rev(`Pre/Post_Fire`), y=indexscore, color=`Fire/Control`)) +
  geom_point() + 
  geom_line(aes(group=Pair_ID)) +
  facet_wrap(~ Group_ID) 

```

```{r}
#buffer grid
ggplot(data = ConfirmedSite, aes(x=fct_rev(`Pre/Post_Fire`), y=bufferlan, color=`Fire/Control`)) +
  geom_point() + 
  geom_line(aes(group=Pair_ID)) +
  facet_wrap(~ Group_ID) 

```

```{r}
#hydrology grid
ggplot(data = ConfirmedSite, aes(x=fct_rev(`Pre/Post_Fire`), y=hydrology, color=`Fire/Control`)) +
  geom_point() + 
  geom_line(aes(group=Pair_ID)) +
  facet_wrap(~ Group_ID) 

```

```{r}
#physical grid
ggplot(data = ConfirmedSite, aes(x=fct_rev(`Pre/Post_Fire`), y=physical, color=`Fire/Control`)) +
  geom_point() + 
  geom_line(aes(group=Pair_ID)) +
  facet_wrap(~ Group_ID) 

```

```{r}
#biotic grid
ggplot(data = ConfirmedSite, aes(x=fct_rev(`Pre/Post_Fire`), y=biotic_str, color=`Fire/Control`)) +
  geom_point() + 
  geom_line(aes(group=Pair_ID)) +
  facet_wrap(~ Group_ID) 

```

```{r}
#Mean summary
ConfirmedSite %>%
  ggplot(aes(y=indexscore, x=fct_rev(`Pre/Post_Fire`), fill=fct_rev(`Fire/Control`))) +
  geom_boxplot()


ConfirmedSite %>%
  ggplot(aes(y=bufferlan, x=fct_rev(`Pre/Post_Fire`), fill=fct_rev(`Fire/Control`))) +
  geom_boxplot()

ConfirmedSite %>%
  ggplot(aes(y=hydrology, x=fct_rev(`Pre/Post_Fire`), fill=fct_rev(`Fire/Control`))) +
  geom_boxplot()

ConfirmedSite %>%
  ggplot(aes(y=physical, x=fct_rev(`Pre/Post_Fire`), fill=fct_rev(`Fire/Control`))) +
  geom_boxplot()

ConfirmedSite %>%
  ggplot(aes(y=biotic_str, x=fct_rev(`Pre/Post_Fire`), fill=fct_rev(`Fire/Control`))) +
  geom_boxplot()
```

## Rate of Change

```{r}
#isolating variables of focus ##not really necessary
Cleaning <- ConfirmedSite %>% select(ecramid,
                                     "Fire/Control", 
                                     "Pre/Post_Fire",
                                     Group_ID,
                                     Pair_ID,
                                     indexscore,
                                     bufferlan,
                                     hydrology,
                                     physical,
                                     biotic_str)

#isolating scores and calculating change
IndexWide <- Cleaning %>% pivot_wider(id_cols = Pair_ID,
                                      names_from = `Pre/Post_Fire`,
                                      values_from = indexscore)
IndexWide$Index_Change <-  IndexWide$post - IndexWide$pre
colnames(IndexWide)[2] ="index_pre"
colnames(IndexWide)[3] ="index_post"
#
BuffWide <- Cleaning %>% pivot_wider(id_cols = Pair_ID,
                                      names_from = `Pre/Post_Fire`,
                                      values_from = bufferlan)
BuffWide$Buff_Change <-  BuffWide$post - BuffWide$pre
colnames(BuffWide)[2] ="buff_pre"
colnames(BuffWide)[3] ="buff_post"
#
HydroWide <- Cleaning %>% pivot_wider(id_cols = Pair_ID,
                                      names_from = `Pre/Post_Fire`,
                                      values_from = hydrology)
HydroWide$Hydro_Change <-  HydroWide$post - HydroWide$pre
colnames(HydroWide)[2] ="hydro_pre"
colnames(HydroWide)[3] ="hydro_post"
#
PhysicalWide <- Cleaning %>% pivot_wider(id_cols = Pair_ID,
                                      names_from = `Pre/Post_Fire`,
                                      values_from = physical)
PhysicalWide$Physical_Change <-  PhysicalWide$post - PhysicalWide$pre
colnames(PhysicalWide)[2] ="physical_pre"
colnames(PhysicalWide)[3] ="physical_post"
#
BioticWide <- Cleaning %>% pivot_wider(id_cols = Pair_ID,
                                      names_from = `Pre/Post_Fire`,
                                      values_from = biotic_str)
BioticWide$Biotic_Change <-  BioticWide$post - BioticWide$pre
colnames(BioticWide)[2] ="biotic_pre"
colnames(BioticWide)[3] ="biotic_post"


##merging and condensing
Change1 <- merge(IndexWide, BuffWide, by = "Pair_ID")
Change2 <- merge(Change1, HydroWide, by = "Pair_ID")
Change3 <- merge(Change2, PhysicalWide, by = "Pair_ID")
Change4 <- merge(Change3, BioticWide, by = "Pair_ID")
ChangeDetails <- merge(Change4, ConfirmedSite, by = "Pair_ID")

Change <- ChangeDetails %>% select(Pair_ID,
                                   `Fire/Control`,
                                     Index_Change,
                                     Buff_Change,
                                     Hydro_Change,
                                     Physical_Change,
                                     Biotic_Change) %>% unique()

means <- aggregate(Index_Change ~  `Fire/Control`, Change, mean)
#Index
Change %>% 
  ggplot(aes(y=Index_Change, x=fct_rev(`Fire/Control`))) +
  geom_boxplot() +
  stat_summary(fun.y = "mean", shape=3, color="blue") + 
  geom_text(data = means, aes(label= Index_Change))

#buffer
Change %>% 
  ggplot(aes(y=Buff_Change, x=fct_rev(`Fire/Control`))) +
  geom_boxplot()+
  stat_summary(fun.y = "mean", shape=3, color="blue")

#Hydro
Change %>% 
  ggplot(aes(y=Hydro_Change, x=fct_rev(`Fire/Control`))) +
  geom_boxplot()+
  stat_summary(fun.y = "mean", shape=3, color="blue")

#physical
Change %>% 
  ggplot(aes(y=Physical_Change, x=fct_rev(`Fire/Control`))) +
  geom_boxplot()+
  stat_summary(fun.y = "mean", shape=3, color="blue")

#biotic
Change %>% 
  ggplot(aes(y=Biotic_Change, x=fct_rev(`Fire/Control`))) +
  geom_boxplot()+
  stat_summary(fun.y = "mean", shape=3, color="blue")
```

## T test

```{r}
#Testing normality
shapiro.test(Change$Index_Change)
shapiro.test(Change$Buff_Change)
shapiro.test(Change$Hydro_Change)
shapiro.test(Change$Physical_Change)
shapiro.test(Change$Biotic_Change)
```

```{r}
t.test(Change$Index_Change~`Fire/Control`, data= Change)
t.test(Change$Buff_Change~`Fire/Control`, data= Change)
t.test(Change$Hydro_Change~`Fire/Control`, data= Change)
t.test(Change$Physical_Change~`Fire/Control`, data= Change)
t.test(Change$Biotic_Change~`Fire/Control`, data= Change)
```

## Regression

```{r}
Regression <- lm(Index_Change ~ Buff_Change + Hydro_Change + Physical_Change + Biotic_Change + `Fire/Control`, data = Change)
summary(Regression)

```

## PCA

```{r}

ChangeMatrix <- Change  %>% select(Index_Change,
                                     Buff_Change,
                                     Hydro_Change,
                                     Physical_Change,
                                     Biotic_Change)

corr_matrix <- cor(ChangeMatrix)
ggcorrplot(corr_matrix)

Change_pca <- princomp(corr_matrix)
summary(Change_pca)

fviz_eig(Change_pca, addlabels = TRUE)
fviz_pca_var(Change_pca, col.var = "black")

```

```{r}
fviz_cos2(Change_pca, choice = "var", axes = 1:2)
```

```{r}
fviz_pca_var(Change_pca, col.var = "cos2",
            gradient.cols = c("black", "orange", "green"),
            repel = TRUE)
```

## PCoA

```{r}
matrix.log <- log1p(ChangeMatrix)

dist <- vegdist(matrix.log, "bray")
res <- pcoa(mite.D)
res$values
biplot(res)

Change_pcoa <- pcoa(dist(ChangeMatrix))
```
